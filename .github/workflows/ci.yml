name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run linting
      run: npm run lint
      
    - name: Run unit tests
      run: npm run test:coverage
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      continue-on-error: true
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-${{ matrix.node-version }}
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        
  # Temporarily disabled E2E tests due to CI timeout issues
  # e2e-tests:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20.x'
  #       cache: 'npm'
  #       
  #   - name: Install dependencies
  #     run: npm ci
  #     
  #   - name: Install Playwright browsers
  #     run: npx playwright install --with-deps
  #     
  #   - name: Run Playwright tests
  #     run: npm run test:e2e
  #     
  #   - name: Upload Playwright report
  #     uses: actions/upload-artifact@v4
  #     if: always()
  #     with:
  #       name: playwright-report
  #       path: playwright-report/
  #       retention-days: 30
        
  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Start server
      run: npm start &
      
    - name: Wait for server
      run: npx wait-on http://localhost:3000 --timeout 60000
      
    # Try Lighthouse CI first (requires LHCI_GITHUB_APP_TOKEN)
    - name: Run Lighthouse CI
      continue-on-error: true
      run: |
        if [ -z "${LHCI_GITHUB_APP_TOKEN:-}" ]; then
          echo "LHCI_GITHUB_APP_TOKEN not set, skipping Lighthouse CI"
          exit 0
        fi
        npm install -g @lhci/cli@0.12.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
    # Fallback to basic Lighthouse if CI fails
    - name: Run basic Lighthouse audit
      if: always()
      continue-on-error: true
      run: |
        npm install -g lighthouse
        lighthouse http://localhost:3000 --output html --output-path ./lighthouse-report.html
        
    - name: Upload Lighthouse report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-report
        path: lighthouse-report.html
        retention-days: 30
        
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Run Snyk security scan
      continue-on-error: true
      run: |
        if [ -z "${SNYK_TOKEN:-}" ]; then
          echo "SNYK_TOKEN not set, skipping Snyk scan"
          echo "Running npm audit instead"
          npm audit --audit-level=high
          exit 0
        fi
        npx snyk auth "$SNYK_TOKEN"
        npx snyk test --severity-threshold=high
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        
  build:
    runs-on: ubuntu-latest
    needs: [test] # Removed e2e-tests dependency
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/
        retention-days: 1 